<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:cache="http://www.springframework.org/schema/cache"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-4.2.xsd 
		http://www.springframework.org/schema/mvc 
		http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd 
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context-3.2.xsd 
		http://www.springframework.org/schema/aop 
		http://www.springframework.org/schema/aop/spring-aop-3.2.xsd 
		http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx-3.2.xsd 
		http://www.springframework.org/schema/cache 
		http://www.springframework.org/schema/cache/spring-cache.xsd">

	<!-- 启用缓存注解功能，这个是必须的，否则注解不会生效，另外，该注解一定要声明在spring主配置文件中才会生效 -->
	<cache:annotation-driven cache-manager="cacheManager" />
	
	<bean id="redisCache" class="com.wing.socialcontact.util.RedisCache">
		<property name="redisTemplate" ref="redisTemplate" />
		<property name="name" value="default" />
		<!-- 存活时间单位为秒 24小时-->
		<property name="liveTime" value="86400" />
	</bean>

	<!-- spring自己的换管理器，这里定义了两个缓存位置名称 ，既注解中的value -->
	<bean id="cacheManager" class="org.springframework.cache.support.SimpleCacheManager">
		<property name="caches">
			<set>
				<ref bean="redisCache"/>
			</set>
		</property>
	</bean>
	<!-- redis数据连接池 -->  
	<bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
		<!-- 最大分配的对象数 -->
		<property name="maxTotal" value="${redis.maxTotal}" />
		<!-- 最小能够保持IDLE状态的对象数 -->
		<property name="minIdle" value="${redis.minIdle}" />
		<!-- 最大能够保持IDLE状态的对象数 -->
		<property name="maxIdle" value="${redis.maxIdle}" />
		<!-- 当池内没有返回对象时，最大等待时间 -->
		<property name="maxWaitMillis" value="${redis.maxWaitMillis}" />
		<!-- 当调用borrow Object方法时，是否进行有效性检查 -->
		<property name="testOnBorrow" value="${redis.testOnBorrow}" />
		<!-- 当调用return Object方法时，是否进行有效性检查 -->
<!-- 		<property name="testOnReturn" value="${redis.pool.testOnReturn}" /> -->
	</bean>
	<bean id="redisClusterConfiguration" class="org.springframework.data.redis.connection.RedisClusterConfiguration">
		<property name="clusterNodes">
			<set>
				<bean class="org.springframework.data.redis.connection.RedisNode">
					<constructor-arg name="host" value="${redis.host}" />
					<constructor-arg name="port" value="${redis.port}" />
				</bean>
			</set>
		</property>
	</bean>
	<!-- redis工厂 -->
	<bean id="connectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
		<constructor-arg name="clusterConfig" ref="redisClusterConfiguration" />
		<constructor-arg name="poolConfig" ref="jedisPoolConfig" />
<!-- 		<property name="database" value="${redis.dbIndex}"/> -->
<!-- 		<property name="password" value="${redis.password}"/> -->
	</bean>
	<!-- redis模板 -->
	<bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
		<property name="connectionFactory" ref="connectionFactory" />
	</bean>

	<!-- redis 集群相关配置开始 
	<bean name="genericObjectPoolConfig" class="org.apache.commons.pool2.impl.GenericObjectPoolConfig" >
			<property name="maxWaitMillis" value="${redis.maxWait}" />
			<property name="maxTotal" value="${redis.maxTotal}" />
			<property name="testOnBorrow" value="${redis.testOnBorrow}" />
			<property name="minIdle" value="${redis.minIdle}" />
			<property name="maxIdle" value="${redis.maxIdle}" />
	</bean>
	<bean id="jedisCluster" class="redis.clients.jedis.JedisCluster">
		<constructor-arg>
			<set>
				<bean class="redis.clients.jedis.HostAndPort">
					<constructor-arg type="String" value="${redis.host}"/>
					<constructor-arg type="int" value="${redis.port}"/>
				</bean>
			</set>
		</constructor-arg>
		<constructor-arg name="poolConfig" ref="genericObjectPoolConfig"/>
	</bean>
	<bean id="connectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
		<property name="cluster" ref="jedisCluster"/>
		<property name="database" value="${redis.dbIndex}"/>
	</bean>
	-->
	<!-- redis 集群相关配置结束
	<bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
		<property name="connectionFactory" ref="connectionFactory" />
	</bean>
 	-->
 
</beans>