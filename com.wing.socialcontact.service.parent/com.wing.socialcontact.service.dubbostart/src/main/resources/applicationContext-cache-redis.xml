<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:cache="http://www.springframework.org/schema/cache" xmlns:redis="http://www.springframework.org/schema/redis"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-4.2.xsd 
		http://www.springframework.org/schema/mvc 
		http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd 
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context-4.2.xsd 
		http://www.springframework.org/schema/aop 
		http://www.springframework.org/schema/aop/spring-aop-4.2.xsd 
		http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx-4.2.xsd 
		http://www.springframework.org/schema/cache 
		http://www.springframework.org/schema/cache/spring-cache.xsd
		http://www.springframework.org/schema/redis http://www.springframework.org/schema/redis/spring-redis-1.0.xsd">

	<!-- 启用缓存注解功能，这个是必须的，否则注解不会生效，另外，该注解一定要声明在spring主配置文件中才会生效 -->
	<cache:annotation-driven cache-manager="cacheManager" />

	<bean id="redisCache" class="com.wing.socialcontact.util.RedisCache">
		<property name="redisTemplate" ref="redisTemplate" />
		<property name="name" value="default" />
		<!-- 存活时间单位为秒 24小时 -->
		<property name="liveTime" value="86400" />
	</bean>

	<!-- spring自己的换管理器，这里定义了两个缓存位置名称 ，既注解中的value -->
	<bean id="cacheManager" class="org.springframework.cache.support.SimpleCacheManager">
		<property name="caches">
			<set>
				<ref bean="redisCache" />
			</set>
		</property>
	</bean>
	<!-- redis 单节点相关配置开始 -->
	
	<bean id="redisConnectionFactory"
		class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
		<property name="hostName" value="${redis.host}" />
		<property name="port" value="${redis.port}" />
		<!--<property name="database" value="${redis.dbIndex}" />-->
		<property name="poolConfig" ref="poolConfig" />
		<property name="password" value="${redis.password}" />
	</bean>
	<!-- redis 单节点相关配置结束 -->
	<bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
		<property name="connectionFactory" ref="redisConnectionFactory" />
	</bean>
	<bean id="jdkSerializer"
		class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer" />
	
	<!-- 
	<bean id="smsMessageDelegateListener" class="com.wing.socialcontact.util.redis.SmsMessageDelegateListener">
	</bean>
	 -->	
	<bean id="smsMessageListener"
		class="org.springframework.data.redis.listener.adapter.MessageListenerAdapter">
		<property name="delegate" ref="smsMessageDelegateListener" />
		<property name="serializer" ref="jdkSerializer" />
	</bean>
	
	<bean id="smsMessageListenerIm"
		class="org.springframework.data.redis.listener.adapter.MessageListenerAdapter">
		<property name="delegate" ref="smsMessageDelegateListenerIm" />
		<property name="serializer" ref="jdkSerializer" />
	</bean>

	<bean id="sendMessage" class="com.wing.socialcontact.util.redis.SendMessage">
		<property name="redisTemplate" ref="redisTemplate" />
	</bean>
	<!-- the method attribute can be skipped as the default method name is "handleMessage" -->
    <!-- topic代表监听的频道，是一个正规匹配  其实就是你要订阅的频道-->
	<!-- 
    <redis:listener-container connection-factory="redisConnectionFactory">
        <redis:listener ref="smsMessageListener" method="handleMessage" topic="sms_queue_web_online"/>
        <redis:listener ref="smsMessageListenerIm" method="handleMessage" topic="sms_queue_web_online_im"/>
    </redis:listener-container> 
    -->
	<bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig">
		<property name="maxIdle" value="${redis.maxIdle}" />
		<property name="maxTotal" value="${redis.maxTotal}" />
		<property name="maxWaitMillis" value="${redis.maxWait}" />
		<property name="testOnBorrow" value="${redis.testOnBorrow}" />
	</bean>
	
	<bean id="jedisPool" class="redis.clients.jedis.JedisPool">
        <constructor-arg index="0" ref="poolConfig" />
        <constructor-arg index="1" value="${redis.host}" type="java.lang.String"/>
        <constructor-arg index="2" value="${redis.port}" type="int" />
    </bean>
</beans>