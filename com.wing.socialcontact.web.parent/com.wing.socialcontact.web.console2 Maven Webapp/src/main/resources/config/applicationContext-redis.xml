<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
            http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
            http://www.springframework.org/schema/context
            http://www.springframework.org/schema/context/spring-context-3.0.xsd">

<!-- 	<bean id="sessionJedisPool" class="redis.clients.jedis.JedisPool" destroy-method="close"> -->
<!-- 		<constructor-arg> -->
<!-- 	        <bean class="org.apache.commons.pool2.impl.GenericObjectPoolConfig"> -->
<!-- 			    <property name="maxTotal" value="${redis.maxTotal}"/> -->
<!-- 			    <property name="maxIdle" value="${redis.maxIdle}"/> -->
<!-- 			    <property name="minIdle" value="${redis.minIdle}"/> -->
<!-- 			    <property name="maxWaitMillis" value="${redis.maxWaitMillis}"/> -->
<!-- 			    <property name="minEvictableIdleTimeMillis" value="${redis.minEvictableIdleTimeMillis}"/> -->
<!-- 			    <property name="testOnBorrow" value="${redis.testOnBorrow}"/> -->
<!-- 			    <property name="testWhileIdle" value="${redis.testWhileIdle}"/> -->
<!-- 		    </bean> -->
<!-- 	    </constructor-arg> -->
<!-- 	    <constructor-arg type="String" value="${redis.host}"/> -->
<!-- 		<constructor-arg type="int" value="${redis.port}" /> -->
<!-- 		<constructor-arg type="int" value="${redis.timeout}"/> -->
<!-- 		<constructor-arg type="String" value="${redis.password}"/> -->
<!-- 		<constructor-arg type="int" value="${redis.database}"/> -->
<!-- 	</bean> -->
	
	<!-- 应用的redis缓存 -->
	<bean id="redisCache" class="com.wing.socialcontact.util.RedisCache" >
		<property name="redisTemplate" ref="redisTemplate" />
		<property name="name" value="default" />
		<!-- 存活时间单位为秒 24小时 -->
		<property name="liveTime" value="86400" />
	</bean>

	<!-- redis 单节点相关配置开始 -->
	<bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig">
		<property name="maxIdle" value="${redis.maxIdle}" />
		<property name="maxWaitMillis" value="${redis.maxWaitMillis}" />
		<property name="testOnBorrow" value="${redis.testOnBorrow}" />
	</bean>
	<bean id="redisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
		<property name="hostName" value="${redis.host}" />
		<property name="port" value="${redis.port}" />
		<!--<property name="database" value="${redis.database}"/>-->
		<property name="poolConfig" ref="poolConfig" />
		<property name="password" value="${redis.password}"/>
	</bean>
	<bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
		<property name="connectionFactory" ref="redisConnectionFactory" />
	</bean>
	<bean id="jedisPool" class="redis.clients.jedis.JedisPool">
        <constructor-arg index="0" ref="poolConfig" />
        <constructor-arg index="1" value="${redis.host}" type="java.lang.String"/>
        <constructor-arg index="2" value="${redis.port}" type="int" />
    </bean>
</beans>